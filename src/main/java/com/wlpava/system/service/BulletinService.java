/****************************************************************** * Copyright (c) 2015 By Wlpava ******************************************************************/package com.wlpava.system.service;import java.util.List;import java.util.Map;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.jpa.domain.Specification;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.wlpava.core.web.DynamicSpecifications;import com.wlpava.core.web.SearchFilter;import com.wlpava.system.BaseService;import com.wlpava.system.entity.Bulletin;/** * 物业管理->公告新闻管理Service *  * @author wenlp */@Service@Transactional(readOnly = true)public class BulletinService extends BaseService {	private static Logger log = LoggerFactory.getLogger(BulletinService.class);	public Page<Bulletin> getPageable(Map<String, Object> searchParams, Integer pageNumber, Integer pageSize) {		PageRequest pageRequest = buildPageRequest(pageNumber, pageSize);		Map<String, SearchFilter> filters = SearchFilter.parse(searchParams);		Specification<Bulletin> specification = DynamicSpecifications.bySearchFilter(filters.values(), Bulletin.class);		return systemDaos.bulletinDao.findAll(specification, pageRequest);	}	public Bulletin findOne(Integer bulletinId) {		return systemDaos.bulletinDao.findOne(bulletinId);	}	public List<Bulletin> findAll() {		return (List<Bulletin>) systemDaos.bulletinDao.findAll();	}	@Transactional(readOnly = false)	public Bulletin create(Bulletin bulletin) {		return systemDaos.bulletinDao.save(bulletin);	}	@Transactional(readOnly = false)	public Bulletin update(Bulletin bulletin) {		return systemDaos.bulletinDao.save(bulletin);	}	@Transactional(readOnly = false)	public void delete(Integer bulletinId) {		systemDaos.bulletinDao.delete(bulletinId);	}}