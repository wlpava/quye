/****************************************************************** * Copyright (c) 2015 By Wlpava ******************************************************************/package com.wlpava.quye.service;import java.util.List;import java.util.Map;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.jpa.domain.Specification;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.wlpava.core.web.DynamicSpecifications;import com.wlpava.core.web.SearchFilter;import com.wlpava.quye.QuyeService;import com.wlpava.quye.entity.Share;/** * XXX管理->XXX管理Service *  * @author wenlp */@Service@Transactional(readOnly = true)public class ShareService extends QuyeService {	private static Logger log = LoggerFactory.getLogger(ShareService.class);	public Page<Share> getPageable(Map<String, Object> searchParams, Integer pageNumber, Integer pageSize) {		PageRequest pageRequest = buildPageRequest(pageNumber, pageSize);		Map<String, SearchFilter> filters = SearchFilter.parse(searchParams);		Specification<Share> specification = DynamicSpecifications.bySearchFilter(filters.values(), Share.class);		return quyeDaos.shareDao.findAll(specification, pageRequest);	}	public Share findOne(Integer shareId) {		return quyeDaos.shareDao.findOne(shareId);	}	public List<Share> findAll() {		return (List<Share>) quyeDaos.shareDao.findAll();	}		@Transactional(readOnly = false)	public Share create(Share share) {		return quyeDaos.shareDao.save(share);	}	@Transactional(readOnly = false)	public Share update(Share share) {		return quyeDaos.shareDao.save(share);	}	@Transactional(readOnly = false)	public void delete(Integer shareId) {		quyeDaos.shareDao.delete(shareId);	}}